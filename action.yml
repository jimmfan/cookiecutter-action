name: Cookiecutter Action
description: Generates a project structure from a Cookiecutter template using dynamic inputs
inputs:
  author:
    description: Project owner's name
    default: jimmfan
  email:
    description: Project owner's email address
    default: jimmfan@github.com
  project_name:
    description: Project name
    required: true
  python_version:
    description: Python version
    default: 3.13
  terraform_org:
    description: Terraform Org Name
  template_directory:
    description: Relative path within the repository to the template directory
    default: basic_python
    options:
    - basic_python
    - basic_terraform
  workflow_token:
    description: Github token with workflow access
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
      with:
        token: ${{ inputs.workflow_token }}

    - name: Install Dependencies
      run: python3 -m pip install cookiecutter==2.5.0
      shell: bash

    # Raw string avoids having to curl or checkout the python file
    - name: Generate Project with Cookiecutter
      run: |
        python3 - <<EOF
        import os
        import json
        from cookiecutter.main import cookiecutter

        template_repo_url = 'https://github.com/jimmfan/cookiecutter-action.git' 
        template_directory = os.getenv('TEMPLATE_DIRECTORY')

        # Create template dictionary from env variables
        extra_context = {
          key: os.getenv(key) for key in [
            'project_name', 
            'author', 
            'email', 
            'python_version',
            'terraform_org',
          ]
        }

        # Call cookiecutter with the loaded context and template directory
        cookiecutter(
            template_repo_url,
            no_input=True,
            checkout='main', 
            extra_context=extra_context,
            directory=template_directory,
            output_dir='.'
        )
        EOF
      shell: bash
      env:
        TEMPLATE_DIRECTORY: ${{ inputs.template_directory || '.' }}
        
    - name: Move Project Files and Cleanup
      run: |
        # This will merge the root with the cookiecutter files, but will overwrite any files with the same name
        rsync -av static/ ./

        # Check if rsync was successful
        if [ $? -eq 0 ]; then
          echo "rsync completed successfully. Removing the source directory..."
          rm -r static/
        else
          echo "rsync failed to remove the source directory."
          exit 1 # Optionally force this step to fail if rsync fails
        fi
      shell: bash