name: 'Cookiecutter Action'
description: 'Generates a project structure from a Cookiecutter template using dynamic inputs'
inputs:
  workflow_token:
    description: 'Github token with workflow access'
    required: true
  template_var_path:
    description: 'JSON path containing all the template variables'
    required: true
  template_repo_url:
    description: 'Cookiecutter template git repository URL'
    required: true
  template_directory:
    description: 'Relative path within the repository to the template directory'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
      with:
        token: ${{ inputs.workflow_token }}

    - name: Install Dependencies
      run: python3 -m pip install cookiecutter==2.5.0
      shell: bash

    - name: Generate Project with Cookiecutter
      run: |
        python3 - <<EOF
        import os
        import json
        from cookiecutter.main import cookiecutter

        # Load JSON context from a file
        with open(os.getenv('TEMPLATE_VAR_PATH'), 'r') as f:
            extra_context = json.load(f)

        template_repo_url = os.getenv('TEMPLATE_REPO_URL')
        template_directory = os.getenv('TEMPLATE_DIRECTORY', '.')  # Default to '.'

        # Call cookiecutter with the loaded context and template directory
        cookiecutter(
            template_repo_url,
            no_input=True,
            extra_context=extra_context,
            directory=template_directory,
            output_dir='.'
        )
        EOF
      shell: bash
      env:
        TEMPLATE_VAR_PATH: ${{ inputs.template_var_path }}
        TEMPLATE_REPO_URL: ${{ inputs.template_repo_url }}
        TEMPLATE_DIRECTORY: ${{ inputs.template_directory || '.' }}

    - name: Move Project Files and Cleanup
      run: |
        # This will merge the root with the cookiecutter files, but will overwrite any files with the same name
        rsync -av static/ ./

        # Check if rsync was successful
        if [ $? -eq 0 ]; then
          echo "rsync completed successfully. Removing the source directory..."
          rm -r static/
        else
          echo "rsync failed to remove the source directory."
          exit 1 # Optionally force this step to fail if rsync fails
        fi
      shell: bash