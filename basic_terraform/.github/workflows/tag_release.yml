name: Create Release and Tag

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-20.04
    permissions:
      contents: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all history and tags

      - name: Determine Version Bump and Tag
        id: version
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          echo "Latest tag: $LATEST_TAG"

          # Default to patch. If #minor or #major is in the commit message, adjust accordingly
          if [[ "${{ github.event.head_commit.message }}" == *"#major"* ]]; then
            BUMP="major"
          elif [[ "${{ github.event.head_commit.message }}" == *"#minor"* ]]; then
            BUMP="minor"
          else
            BUMP="patch"
          fi
          echo "Bump type: $BUMP"

          # Break down the tag into major.minor.patch
          IFS='.' read -ra PARTS <<< "$LATEST_TAG"
          MAJOR=${PARTS[0]}
          MINOR=${PARTS[1]}
          PATCH=${PARTS[2]}

          # Increment version
          case $BUMP in
            major)
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
            minor)
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            patch|*)
              PATCH=$((PATCH + 1))
              ;;
          esac

          NEW_TAG="$MAJOR.$MINOR.$PATCH"
          echo "New tag: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
        shell: bash

      - name: Create and Push Tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_TAG }}
          release_name: Release ${{ env.NEW_TAG }}
          draft: false
          prerelease: false
